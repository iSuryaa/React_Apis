{"ast":null,"code":"var _jsxFileName = \"/home/anianfo/Redux crud/crud/src/Movies/Movies.js\",\n  _s = $RefreshSig$();\nimport { Card, Grid, CardMedia, Typography, CardContent } from '@mui/material';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Image from \"./Notebook.jpeg\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { fetchItem } from \"../Redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Movies = () => {\n  _s();\n  const carts = useSelector(state => state.carts);\n  const dispatch = useDispatch();\n  const fetchItems = async () => {\n    const response = await axios.get(`https://my-json-server.typicode.com/horizon-code-academy/fake-movies-api/movies`).then(response => response.data);\n    dispatch(fetchItem(response));\n  };\n  fetchItems();\n  useEffect(() => {\n    fetchItem();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxHeight: 'max-',\n      backgroundColor: 'black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 70,\n        backgroundColor: 'rgb(209 22 22)',\n        marginTop: '-20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          position: 'relative',\n          top: '24px',\n          marginLeft: '40px',\n          textAlign: 'left',\n          fontSize: '20px',\n          fontWeight: 'bold',\n          color: 'white'\n        },\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      sx: {\n        flexGrow: 1,\n        mt: 8\n      },\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          spacing: 1.5,\n          children: carts && carts.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"card\",\n              sx: {\n                cursor: 'pointer',\n                width: \"350\",\n                backgroundColor: 'rgb(209 22 22)',\n                textAlign: 'center',\n                ':hover': {\n                  transform: 'scale(1.1)',\n                  transition: 'all 0.3s'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                height: \"350\",\n                image: item.Poster ? item.Poster : Image,\n                alt: item.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"white\",\n                  fontWeight: \"bold\",\n                  fontSize: \"large\",\n                  children: item.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"white\",\n                  fontWeight: \"bold\",\n                  children: item.Year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"white\",\n                  children: [\"Runtime: \", item.Runtime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"jUVWEsCVFp1R0P5OweOlQqsbgZ0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["Card","Grid","CardMedia","Typography","CardContent","useSelector","useDispatch","Image","axios","useEffect","fetchItem","jsxDEV","_jsxDEV","Movies","_s","carts","state","dispatch","fetchItems","response","get","then","data","style","maxHeight","backgroundColor","children","height","marginTop","position","top","marginLeft","textAlign","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","mt","container","item","xs","justifyContent","spacing","map","index","className","cursor","width","transform","transition","component","image","Poster","alt","Title","variant","Year","Runtime","_c","$RefreshReg$"],"sources":["/home/anianfo/Redux crud/crud/src/Movies/Movies.js"],"sourcesContent":["import {\n  Card,\n  Grid,\n  CardMedia,\n  Typography,\n  CardContent\n} from '@mui/material';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Image from \"./Notebook.jpeg\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { fetchItem } from \"../Redux/action\";\n\n\n\nexport const Movies = () => {\n\n  const carts = useSelector((state) => state.carts);\n  const dispatch = useDispatch();\n\n\n  const fetchItems = async () => {\n    const response = await axios\n      .get(`https://my-json-server.typicode.com/horizon-code-academy/fake-movies-api/movies`)\n      .then((response) => response.data);\n\n    dispatch(fetchItem(response));\n  };\n\n  fetchItems()\n\n  useEffect(() => {\n    fetchItem()\n  }, [])\n\n\n  return (\n    <div style={{maxHeight:'max-',backgroundColor:'black'}}>\n\n      <div style={{ height: 70, backgroundColor: 'rgb(209 22 22)', marginTop: '-20px' }}>\n        <p style={{ position: 'relative', top: '24px', marginLeft: '40px', textAlign: 'left', fontSize: '20px', fontWeight: 'bold', color: 'white' }}>Movies</p>\n      </div>\n\n      <Grid sx={{ flexGrow: 1, mt: 8, }} container>\n        <Grid item xs={12}>\n          <Grid container justifyContent=\"center\"  spacing={1.5}>\n\n            {carts &&\n              carts.map((item, index) => (\n                <Grid key={index} item>\n\n                  <Card className='card' sx={{\n                    cursor: 'pointer', width: \"350\", backgroundColor: 'rgb(209 22 22)', textAlign: 'center', ':hover': {\n                      transform: 'scale(1.1)', transition: 'all 0.3s'\n                    },\n                  }}>\n                    <CardMedia component=\"img\"\n                      height=\"350\"\n                      image={item.Poster ? item.Poster : Image} alt={item.Title} />\n\n                    <CardContent>\n\n                      <Typography variant=\"body2\" color=\"white\" fontWeight={\"bold\"} fontSize={\"large\"}>\n                        {item.Title}\n                      </Typography>\n\n                      <Typography variant=\"body2\" color=\"white\" fontWeight={\"bold\"}>\n                        {item.Year}\n                      </Typography>\n\n                      <Typography variant=\"body2\" color=\"white\" >\n                        Runtime: {item.Runtime}\n                      </Typography>\n\n                    </CardContent>\n\n                  </Card>\n                </Grid>\n              ))}\n\n          </Grid>\n        </Grid>\n      </Grid>\n\n    </div >\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}