{"ast":null,"code":"var _jsxFileName = \"/home/anianfo/surya/React with Node/Redux_crud/crud/src/Details/DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from 'axios';\nimport { Actiontypes } from '../Redux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600\n  }\n});\nconst DataTable = () => {\n  _s();\n  const contacts = useSelector(state => state.data);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [selectedRow, setSelectedRow] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/auth/users\");\n        dispatch({\n          type: Actiontypes.FETCH_DATA_SUCCESS,\n          payload: response.data\n        });\n      } catch (error) {\n        // dispatch({\n        //   type: Actiontypes.FETCH_CONTACTS_FAILURE,\n        //   payload: error.message,\n        // });\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n  const handleRowClick = row => {\n    setSelectedRow(row);\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: contacts.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          onClick: () => handleRowClick(row),\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), selectedRow && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Row: \", selectedRow.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"4sDaiPooPOKSug7yiKWheP24TrI=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useSelector","useDispatch","axios","Actiontypes","jsxDEV","_jsxDEV","useStyles","table","minWidth","DataTable","_s","contacts","state","data","dispatch","classes","selectedRow","setSelectedRow","fetchData","response","get","type","FETCH_DATA_SUCCESS","payload","error","console","log","handleRowClick","row","component","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","email","password","id","_c","$RefreshReg$"],"sources":["/home/anianfo/surya/React with Node/Redux_crud/crud/src/Details/DataTable.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from 'axios';\nimport { Actiontypes } from '../Redux/action';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600,\n  },\n});\n\n\nconst DataTable = () => {\n    const contacts = useSelector((state) => state.data);\n    const dispatch = useDispatch();\n  const classes = useStyles();\n  const [selectedRow, setSelectedRow] = useState(null);\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/auth/users\"); \n        dispatch({\n          type: Actiontypes.FETCH_DATA_SUCCESS,\n          payload: response.data,\n        });\n      } catch (error) {\n        // dispatch({\n        //   type: Actiontypes.FETCH_CONTACTS_FAILURE,\n        //   payload: error.message,\n        // });\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n\n\n  const handleRowClick = (row) => {\n    setSelectedRow(row);\n  };\n\n  return (\n    \n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Password</TableCell>\n            {/* <TableCell>Phone</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n           {contacts.map((row) => (\n            <TableRow key={row.id} onClick={() => handleRowClick(row)}>\n              {/* <TableCell component=\"th\" scope=\"row\">{row._id}</TableCell> */}\n              {/* <TableCell>{row.name}</TableCell> */}\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.password}</TableCell>\n            </TableRow>\n          ))} \n        </TableBody>\n      </Table>\n      {selectedRow && (\n        <div>\n          <p>Selected Row: {selectedRow.email}</p>\n        </div>\n      )}\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}