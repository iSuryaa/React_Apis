{"ast":null,"code":"var _jsxFileName = \"/home/anianfo/Redux crud/crud/src/Details/Edit.js\",\n  _s = $RefreshSig$();\n// import React,{useState,useEffect} from 'react'\n// import { Box, Typography, Grid, Paper,MenuItem } from '@mui/material'\n// import HelpOutlinedIcon from '@mui/icons-material/HelpOutlined';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// export const Edit = () => {\n\n// const navigate = useNavigate();  \n\n//   const [name,setName]= useState(\"\");\n//   const [type,setType]= useState(\"\");\n//   const [code,setCode]= useState(\"\");\n//   const [description,setDescription]= useState(\"\");\n\n//   const contacts = useSelector((state) => state);\n//   const dispatch = useDispatch();\n\n//    const handleUsers = (event) =>{\n//      event.preventDefault()  \n\n//     navigate('/user-list')\n//     const data = {\n//      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0, \n//      name,\n//      type,\n//      code,\n//      description\n//    };\n//    dispatch({type:\"UPDATE_CONTACT\",payload:data});\n//    };\n\n// //   useEffect(() => {\n// //     setName(localStorage.setItem('name',name))\n// //     setDescription(localStorage.setItem('description',description))\n// //     setCode(localStorage.setItem('code',code))\n// //   }, []);\n\n//   return (\n//     <Box >\n\n//       <Grid container justifyContent={'center'}>\n//         <Grid item xs={12} sm={8} md={6} sx={{ marginTop: 3, boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\n//           <Paper\n//             sx={{ padding: '17px', height: 'fit-content', marginLeft: '7px' }}\n//           >\n//             <form>\n//               <Typography sx={{ fontSize: '20px' }}>Edit Account</Typography>\n//               <Box>\n//                 <label>\n//                   <Typography mt={5} mb={1} sx={{ fontSize: \"16px\", color: \"#BD4C46\" }}>\n//                     Account Name\n//                   </Typography>\n//                 </label>\n\n//                 <input\n//                   type='text'\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n\n//                   style={{ height: '30px', width: '250px' }}\n//                 />\n//               </Box>\n\n//               <Box>\n//                 <label>\n//                   <Typography mt={3} mb={1} sx={{ fontSize: \"16px\", }}>\n//                     Account Code <HelpOutlinedIcon sx={{ height: '18px', position: 'absolute', marginTop: '2px' }} />\n//                   </Typography>\n//                 </label>\n\n//                 <input\n//                   type='text'\n//                   value={code}\n//                   onChange={(e) => setCode(e.target.value)}\n//                   style={{ height: '30px', width: '250px' }}\n//                 />\n//               </Box>\n\n//               <Box>\n//                 <label>\n//                   <Typography mt={3} mb={1} sx={{ fontSize: \"16px\", color: \"#BD4C46\" }}>\n//                     Account Type\n//                   </Typography>\n//                 </label>\n//                 <MenuItem \n//                   value={type}\n//                   onChange={(e) => setType(e.target.type)} style={{ height: '40px', width: '255px' }}>\n//                 <select> <option>Stock</option>\n//                   <option>Customer</option></select></MenuItem>\n\n//               </Box>\n\n//               <Box>\n//                 <label>\n//                   <Typography\n//                     mt={3}\n//                     mb={1}\n//                     sx={{ fontSize: \"16px\", color: \"#000\" }}\n//                   >\n//                     Description\n//                   </Typography>\n//                 </label>\n\n//                 <textarea\n//                   rows={3}\n//                   cols={25}\n//                   placeholder=\"Max 500 characters\"\n//                   value={description}\n//                   onChange={(e) => setDescription( e.target.value)}\n//                   style={{\n//                     padding: \"10px\",\n//                     borderRadius: \"2px\",\n//                     border: \"1px solid gray\",\n//                     fontFamily: 'sans-serif',\n//                     fontSize: '15px'\n//                   }}\n//                 />\n//               </Box>\n\n//               <Box>\n//                 <Typography mt={3}><input type=\"checkbox\"  ></input>\n//                   <label style={{ fontFamily: 'inherit', marginLeft: '5px' }}>Add to the watchlist on my dashboard</label></Typography>\n//               </Box>\n\n//               <Box mt={6} >\n//                 <button style={{ height: '40px', width: '65px', backgroundColor: '#CF4B28', color: 'white', border: '1px solid #CF4B28', borderRadius: '5px', fontWeight: 'bold' }} \n//                 onClick={handleUsers}  >Save</button>\n//                 <button style={{ height: '40px', width: '65px', marginLeft: '11px', backgroundColor: 'lightgrey', border: '1px solid lightgray', borderRadius: '5px' }}>Cancel</button>\n//               </Box>\n\n//             </form>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n\n//     </Box>\n//   )\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Edit = _ref => {\n  _s();\n  let {\n    updateContact\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const contacts = useSelector(state => state);\n  const contact = contacts.find(contact => contact.id === parseInt(id));\n  useEffect(() => {\n    setName(contact.name);\n    setType(contact.email);\n    setDescription(contact.phone);\n  }, [contact]);\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter(contact => contact.email === type && contact.id !== contact.id ? contact : null);\n    const checkContactPhoneExists = contacts.filter(contact => contact.phone === description && contact.id !== contact.id ? contact : null);\n    if (!type || !name || !description) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n    const data = {\n      id: contact.id,\n      name,\n      type,\n      description\n    };\n    updateContact(data);\n    toast.success(\"Contact updated successfully!!\");\n    navigate('/user-list');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark ml-auto my-5\",\n        onClick: () => navigate(\"/user-list\"),\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mx-auto shadow p-5\",\n        children: contact ? /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: '20px'\n            },\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 5,\n                mb: 1,\n                sx: {\n                  fontSize: \"16px\",\n                  color: \"#BD4C46\"\n                },\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              style: {\n                height: '30px',\n                width: '250px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 3,\n                mb: 1,\n                sx: {\n                  fontSize: \"16px\"\n                },\n                children: [\"Account Code \", /*#__PURE__*/_jsxDEV(HelpOutlinedIcon, {\n                  sx: {\n                    height: '18px',\n                    position: 'absolute',\n                    marginTop: '2px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: code,\n              onChange: e => setCode(e.target.value),\n              style: {\n                height: '30px',\n                width: '250px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 3,\n                mb: 1,\n                sx: {\n                  fontSize: \"16px\",\n                  color: \"#BD4C46\"\n                },\n                children: \"Account Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-select-currency\",\n              select: true,\n              label: \"Select\",\n              defaultValue: \"EUR\",\n              helperText: \"Please select your currency\",\n              value: type,\n              onChange: e => setType(e.target.value),\n              children: account.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 12\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 3,\n                mb: 1,\n                sx: {\n                  fontSize: \"16px\",\n                  color: \"#000\"\n                },\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 3,\n              cols: 25,\n              placeholder: \"Max 500 characters\",\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              style: {\n                padding: \"10px\",\n                borderRadius: \"2px\",\n                border: \"1px solid gray\",\n                fontFamily: 'sans-serif',\n                fontSize: '15px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              mt: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontFamily: 'inherit',\n                  marginLeft: '5px'\n                },\n                children: \"Add to the watchlist on my dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                height: '40px',\n                width: '65px',\n                backgroundColor: '#CF4B28',\n                color: 'white',\n                border: '1px solid #CF4B28',\n                borderRadius: '5px',\n                fontWeight: 'bold'\n              },\n              onClick: handleUsers,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                height: '40px',\n                width: '65px',\n                marginLeft: '11px',\n                backgroundColor: 'lightgrey',\n                border: '1px solid lightgray',\n                borderRadius: '5px'\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 14\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"No Contact Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Edit, \"oFEoU/7KqNiq96ergdPpeVRBWC8=\", false, function () {\n  return [useParams, useNavigate, useSelector];\n});\n_c = Edit;\nconst mapStateToProps = state => ({\n  contacts: state\n});\nconst mapDispatchToProps = dispatch => ({\n  updateContact: data => {\n    dispatch({\n      type: \"UPDATE_CONTACT\",\n      payload: data\n    });\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useEffect","useState","connect","useSelector","useNavigate","useParams","toast","jsxDEV","_jsxDEV","Edit","_ref","_s","updateContact","id","navigate","contacts","state","contact","find","parseInt","setName","name","setType","email","setDescription","phone","type","description","handleSubmit","e","preventDefault","checkContactEmailExists","filter","checkContactPhoneExists","warning","length","error","data","success","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Typography","sx","fontSize","Box","mt","mb","color","value","onChange","target","style","height","width","HelpOutlinedIcon","position","marginTop","code","setCode","TextField","select","label","defaultValue","helperText","account","map","option","MenuItem","rows","cols","placeholder","padding","borderRadius","border","fontFamily","marginLeft","backgroundColor","fontWeight","handleUsers","_c","mapStateToProps","mapDispatchToProps","dispatch","payload","$RefreshReg$"],"sources":["/home/anianfo/Redux crud/crud/src/Details/Edit.js"],"sourcesContent":["// import React,{useState,useEffect} from 'react'\n// import { Box, Typography, Grid, Paper,MenuItem } from '@mui/material'\n// import HelpOutlinedIcon from '@mui/icons-material/HelpOutlined';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n\n\n\n// export const Edit = () => {\n\n  \n// const navigate = useNavigate();  \n\n//   const [name,setName]= useState(\"\");\n//   const [type,setType]= useState(\"\");\n//   const [code,setCode]= useState(\"\");\n//   const [description,setDescription]= useState(\"\");\n\n//   const contacts = useSelector((state) => state);\n//   const dispatch = useDispatch();\n\n\n//    const handleUsers = (event) =>{\n//      event.preventDefault()  \n     \n//     navigate('/user-list')\n//     const data = {\n//      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0, \n//      name,\n//      type,\n//      code,\n//      description\n//    };\n//    dispatch({type:\"UPDATE_CONTACT\",payload:data});\n//    };\n\n\n\n// //   useEffect(() => {\n// //     setName(localStorage.setItem('name',name))\n// //     setDescription(localStorage.setItem('description',description))\n// //     setCode(localStorage.setItem('code',code))\n// //   }, []);\n\n//   return (\n//     <Box >\n     \n//       <Grid container justifyContent={'center'}>\n//         <Grid item xs={12} sm={8} md={6} sx={{ marginTop: 3, boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\n//           <Paper\n//             sx={{ padding: '17px', height: 'fit-content', marginLeft: '7px' }}\n//           >\n//             <form>\n//               <Typography sx={{ fontSize: '20px' }}>Edit Account</Typography>\n//               <Box>\n//                 <label>\n//                   <Typography mt={5} mb={1} sx={{ fontSize: \"16px\", color: \"#BD4C46\" }}>\n//                     Account Name\n//                   </Typography>\n//                 </label>\n\n//                 <input\n//                   type='text'\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n                  \n//                   style={{ height: '30px', width: '250px' }}\n//                 />\n//               </Box>\n\n//               <Box>\n//                 <label>\n//                   <Typography mt={3} mb={1} sx={{ fontSize: \"16px\", }}>\n//                     Account Code <HelpOutlinedIcon sx={{ height: '18px', position: 'absolute', marginTop: '2px' }} />\n//                   </Typography>\n//                 </label>\n\n//                 <input\n//                   type='text'\n//                   value={code}\n//                   onChange={(e) => setCode(e.target.value)}\n//                   style={{ height: '30px', width: '250px' }}\n//                 />\n//               </Box>\n\n//               <Box>\n//                 <label>\n//                   <Typography mt={3} mb={1} sx={{ fontSize: \"16px\", color: \"#BD4C46\" }}>\n//                     Account Type\n//                   </Typography>\n//                 </label>\n//                 <MenuItem \n//                   value={type}\n//                   onChange={(e) => setType(e.target.type)} style={{ height: '40px', width: '255px' }}>\n//                 <select> <option>Stock</option>\n//                   <option>Customer</option></select></MenuItem>\n                   \n            \n//               </Box>\n\n//               <Box>\n//                 <label>\n//                   <Typography\n//                     mt={3}\n//                     mb={1}\n//                     sx={{ fontSize: \"16px\", color: \"#000\" }}\n//                   >\n//                     Description\n//                   </Typography>\n//                 </label>\n\n//                 <textarea\n//                   rows={3}\n//                   cols={25}\n//                   placeholder=\"Max 500 characters\"\n//                   value={description}\n//                   onChange={(e) => setDescription( e.target.value)}\n//                   style={{\n//                     padding: \"10px\",\n//                     borderRadius: \"2px\",\n//                     border: \"1px solid gray\",\n//                     fontFamily: 'sans-serif',\n//                     fontSize: '15px'\n//                   }}\n//                 />\n//               </Box>\n\n//               <Box>\n//                 <Typography mt={3}><input type=\"checkbox\"  ></input>\n//                   <label style={{ fontFamily: 'inherit', marginLeft: '5px' }}>Add to the watchlist on my dashboard</label></Typography>\n//               </Box>\n\n//               <Box mt={6} >\n//                 <button style={{ height: '40px', width: '65px', backgroundColor: '#CF4B28', color: 'white', border: '1px solid #CF4B28', borderRadius: '5px', fontWeight: 'bold' }} \n//                 onClick={handleUsers}  >Save</button>\n//                 <button style={{ height: '40px', width: '65px', marginLeft: '11px', backgroundColor: 'lightgrey', border: '1px solid lightgray', borderRadius: '5px' }}>Cancel</button>\n//               </Box>\n\n\n\n//             </form>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n\n//     </Box>\n//   )\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect,useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nexport const Edit = ({  updateContact }) => {\n  const { id } = useParams();\n const navigate = useNavigate();\n const contacts = useSelector((state) => state);\n  const contact = contacts.find(\n    (contact) => contact.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(contact.name);\n    setType(contact.email);\n    setDescription(contact.phone);\n  }, [contact]);\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n     const checkContactEmailExists = contacts.filter((contact) =>\n       contact.email === type && contact.id !== contact.id\n         ? contact\n         : null\n     );\n     const checkContactPhoneExists = contacts.filter((contact) =>\n       contact.phone === description && contact.id !== contact.id\n         ? contact\n         : null\n     )\n     if (!type || !name || !description) {\n       return toast.warning(\"Please fill in all fields!!\");\n     }\n     if (checkContactEmailExists.length > 0) {\n       return toast.error(\"This email already exists!!\");\n     }\n     if (checkContactPhoneExists.length > 0) {\n       return toast.error(\"This phone number already exists!!\");\n     }\n\n    const data = {\n      id: contact.id,\n      name,\n      type,\n      description,\n    };\n\n    updateContact(data);\n    toast.success(\"Contact updated successfully!!\");\n    navigate('/user-list')\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => navigate(\"/user-list\")}\n        >\n          Go back\n        </button>\n        <div className=\"col-md-6 mx-auto shadow p-5\">\n          {contact ? (\n             <form>\n             <Typography sx={{ fontSize: '20px' }}>Create Account</Typography>\n             <Box>\n               <label>\n                 <Typography mt={5} mb={1} sx={{ fontSize: \"16px\", color: \"#BD4C46\" }}>\n                   Account Name\n                 </Typography>\n               </label>\n\n               <input\n                 type='text'\n                 value={name}\n                 onChange={(e) => setName(e.target.value)}\n                 \n                 style={{ height: '30px', width: '250px' }}\n               />\n             </Box>\n\n             <Box>\n               <label>\n                 <Typography mt={3} mb={1} sx={{ fontSize: \"16px\", }}>\n                   Account Code <HelpOutlinedIcon sx={{ height: '18px', position: 'absolute', marginTop: '2px' }} />\n                 </Typography>\n               </label>\n\n               <input\n                 type='text'\n                 value={code}\n                 onChange={(e) => setCode(e.target.value)}\n                 style={{ height: '30px', width: '250px' }}\n               />\n             </Box>\n\n             <Box>\n               <label>\n                 <Typography mt={3} mb={1} sx={{ fontSize: \"16px\", color: \"#BD4C46\" }}>\n                   Account Type\n                 </Typography>\n               </label>\n               <TextField\n         id=\"outlined-select-currency\"\n         select\n         label=\"Select\"\n         defaultValue=\"EUR\"\n         helperText=\"Please select your currency\"\n         value={type}\n         onChange={(e) => setType(e.target.value)}\n       >\n         {account.map((option) => (\n           <MenuItem key={option.value} value={option.value}>\n             {option.label}\n           </MenuItem>\n         ))}\n       </TextField>\n                  \n           \n             </Box>\n\n             <Box>\n               <label>\n                 <Typography\n                   mt={3}\n                   mb={1}\n                   sx={{ fontSize: \"16px\", color: \"#000\" }}\n                 >\n                   Description\n                 </Typography>\n               </label>\n\n               <textarea\n                 rows={3}\n                 cols={25}\n                 placeholder=\"Max 500 characters\"\n                 value={description}\n                 onChange={(e) => setDescription( e.target.value)}\n                 style={{\n                   padding: \"10px\",\n                   borderRadius: \"2px\",\n                   border: \"1px solid gray\",\n                   fontFamily: 'sans-serif',\n                   fontSize: '15px'\n                 }}\n               />\n             </Box>\n\n             <Box>\n               <Typography mt={3}><input type=\"checkbox\"  ></input>\n                 <label style={{ fontFamily: 'inherit', marginLeft: '5px' }}>Add to the watchlist on my dashboard</label></Typography>\n             </Box>\n\n             <Box mt={6} >\n               <button style={{ height: '40px', width: '65px', backgroundColor: '#CF4B28', color: 'white', border: '1px solid #CF4B28', borderRadius: '5px', fontWeight: 'bold' }} \n                onClick={handleUsers} >Save</button>\n               <button style={{ height: '40px', width: '65px', marginLeft: '11px', backgroundColor: 'lightgrey', border: '1px solid lightgray', borderRadius: '5px' }}>Cancel</button>\n             </Box>\n\n\n\n           </form>\n          ) : (\n            <h1 className=\"text-center\">No Contact Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateContact: (data) => {\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}